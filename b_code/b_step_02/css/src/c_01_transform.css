@charset "UTF-8";
/* c_01_transform.css */

/* common
------------------------------------------------------------ */


/* design
------------------------------------------------------------ */

#wrap {
    width: 800px; height: auto; min-height:500px;
    margin-bottom: 200px;
}

h1 {
    width: 100%; height: auto;
    margin-bottom: 50px;
    font-size: 1.5rem;
}
h2 { border-bottom: 1px solid #333; }

.part {
    width: 95%; height: 1000px;
    margin: auto; margin-top: 50px;
    padding: 8px;
    border:1px solid #333;
}
h3 { background-color: #ddd; }
.part ul {
    width: 100%; height: auto;
    background-color: #faa;
}
.part li {
    width: 100px; height: 100px;
    border-radius: 4px;
    border:1px solid #fff;
    margin: 8px;
    color:#228;
    background-color: #aaf;
}


/* translate ------------------------------------------------------------------- */

.translate li { transition:all 500ms linear; }
.translate:hover li:nth-child(1) { transform:translateX(100px); }
.translate:hover li:nth-child(2) { transform:translateY(-100px); }
.translate:hover li:nth-child(3) { transform:translate(-120px, 50px); }
.translate:hover li:nth-child(4) { transform:translateZ(500px); }
/* z는 원근법처리가 안되어있으면 변화가 없어보임 */
.translate:hover li:nth-child(5) { transform:translateX(50%); }
/* 부모가 아닌 자신의 사이즈 기준으로 50%이동하며, translate 기본값은 x축 이동 */


/* scale ------------------------------------------------------------------- */
/* 안에 있는 내용의 크기도 배가 됨, 기본값 x축
슬라이드에서 중앙 컨텐츠만 커지는 효과 넣을때 사용 */

.scale li { margin: 30px; transition:all 400ms linear; }
.scale:hover li:nth-child(1) { transform:scale(1.2); } /* 120%로 작성가능 */
.scale:hover li:nth-child(2) { transform:scaleX(1.5); }
.scale:hover li:nth-child(3) { transform:scaleY(0.7); } /* .7로 작성가능하나 권장하지않음 */
.scale:hover li:nth-child(4) { transform:scale(0.5, 1.5); }
.scale:hover li:nth-child(5) { transform:scaleZ(2); } /* 앞뒤로 커지는거라 변화 안보임 */


/* skew ------------------------------------------------------------------- */
/* 안에 있는 내용도 기울어짐, 원상태로 돌리려면 -각도를 작성 */

.skew li { margin:30px; transition:all 300ms ease-in; }
.skew:hover li:nth-child(1) { transform:skew(30deg); }
.skew:hover li:nth-child(2) { transform:skewY(30deg); }
.skew:hover li:nth-child(3) { transform:skew(30deg, 15deg); }
.skew:hover li:nth-child(4) { transform:skewX(45deg); }
.skew:hover li:nth-child(4) span { display: block; transform:skewX(-45deg)}


/* rotate ------------------------------------------------------------------- */
/* z축이 기준, 내용도 같이 회전
float이랑 사용하면 180, 360도에서 작동안되는 경우 있음 */
.rotate li { margin:30px; transition:all 300ms ease-in; }
.rotate:hover li:nth-child(1) { transform:rotate(45deg); } /* =rotateZ */
.rotate:hover li:nth-child(2) { transform:rotateY(720deg); } /* 시계방향 회전 */
.rotate:hover li:nth-child(3) { transform:rotateX(15deg); } /* 왼쪽에서 봤을때 시계방향 */
.rotate:hover li:nth-child(4) { transform:rotate3D(1, 1, 1, 40deg); } /* x, y축 동시 회전 */
.rotate:hover li:nth-child(5) { transform:rotateY(180deg); backface-visibility: hidden; }

/* 카드 뒤집기 효과 ---------------------------------- */
.rotate li:nth-child(6) { 
    position:relative; z-index: 20; 
    width: 200px; height: 150px;
}
.rotate li div { 
    position:absolute; top: 0; left: 0;
    width: 100%; height: 100%; padding: 3rem;
    backface-visibility: hidden; 
    transition:all 400ms ease;
}
.front { z-index: 1; background-color: #fa0; transform:rotateY(0); }
.back { background-color: #a5f; transform:rotateY(-180deg); }

.rotate li:hover .front { transform:rotateY(180deg); }
.rotate li:hover .back { transform:rotateY(360deg); }


/* rotate, perspective ----------------------------------------------------- */
/* ul에 원근법을 적용한 회전 */

.part .rotate2 {
    perspective:500px;
    float: left; width: auto;
}
.rotate2 li {
    float:left; transition:all 1500ms linear;
    text-align: center; line-height: 100px;
}
.rotate2:hover li { transform:rotateY(180deg); }

/* li에 원근법을 적용한 회전 */
.part .rotate3 {
    float: left; width: auto; margin-top: 40px;
}
.rotate3 li {
    float: left; transition:all 1500ms linear;
    text-align: center; line-height: 100px;
}
.rotate3:hover li { transform:perspective(500px) rotateY(180deg); }


/* multi_tr ------------------------------------------------------------ */

.multi_tr li { transition:all 2000ms ease; }
.multi_tr:hover li:nth-child(1) { transform:translateX(500px) rotate(360deg); }
.multi_tr:hover li:nth-child(2) { transform:rotate(360deg) translateX(500px); }
.multi_tr li:nth-child(3) { transform-origin:0 0; }
.multi_tr:hover li:nth-child(3) { transform:rotate(360deg); }


/* perspectiveWrap ------------------------------------------------------------ */

#perspectiveWrap {
    position:relative;
    display: flex;
    justify-content: space-between; /* justify=양쪽정렬, space-between=균등하게, flex-start=float left, flex-end=float right(리스트는 순서대로) center=가운데, space-around=양옆 공백 후 균등정렬 */
    width: 100%; min-width:1440px; height: 400px; 
    padding-bottom: 500px; padding-top: 50px; box-sizing:content-box;
    background-color: #eee;
    perspective: 500px;
    perspective-origin: 0;
}
.pers_card {
    width: 250px; height: 400px;
    background-color: #acf;
    background-image:linear-gradient(45deg, #adf, #fac);
    border-radius:5px;
    transition:all 2000ms linear;
}

#perspectiveWrap:hover .pers_card { transform:rotateY(40deg); }
/* #perspectiveWrap:hover .pers_card { transform: perspective(500px) rotateX(40deg);} */